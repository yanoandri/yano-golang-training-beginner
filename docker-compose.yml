version: "3"
services:
    web:
        build:
            context: .
            dockerfile: .Dockerfile
        networks: 
            - "training"
        container_name: golang-training-web
        command: "./myapp/start web"
        ports:
            - "80:1323"
        depends_on: 
            - "migrate"
    postgres:
        image: 'postgres:10.7'
        container_name: golang-training-db
        networks: 
            - "training"
        environment:
            - POSTGRES_USER=test
            - POSTGRES_PASSWORD=test
            - POSTGRES_DB=payment
        ports:
            - 5432:5432
        volumes:
            - ./postgres-data:/var/lib/postgresql/data
    migrate:
        image: migrate/migrate
        container_name: golang-training-migrate
        networks: 
            - "training"
        volumes:
            - $PWD/migrations:/migrations
        command: ["-path", "/migrations", "-database",  "postgres://test:test@postgres:5432/payment?sslmode=disable", "up"]
        depends_on: 
            - "postgres"
    cron:
        build:
            context: .
            dockerfile: .Dockerfile
        networks: 
            - "training"
        container_name: golang-training-cron
        command: "/bin/sh /myapp/entrypoint.sh"
        depends_on: 
            - "web"
    localstack:
        image: localstack/localstack
        container_name: golang-training-localstack
        networks: 
            - "training"
        ports:
            - 4566:4566
        environment:
            - SERVICES=sqs
            - DOCKER_HOST=unix:///var/run/docker.sock
            - DEFAULT_REGION=ap-southeast-2
        healthcheck:
            test:
                - CMD
                - bash
                - -c
                - awslocal sqs create-queue --queue-name=payment_queue && awslocal sqs list-queues
            interval: 10s
            timeout: 5s
            retries: 5
        volumes:
            - "${TMPDIR:-/tmp/localstack}:/tmp/localstack"
            - "/var/run/docker.sock:/var/run/docker.sock"
networks:
    training:
        driver: bridge